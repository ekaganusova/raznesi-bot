import logging
import os
import requests
from flask import Flask, request
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENROUTER_KEY = os.getenv("OPENROUTER_KEY")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")  # –ü—Ä–∏–º–µ—Ä: https://yourapp.onrender.com

# Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO, format="%(asctime)s ‚Äî %(levelname)s ‚Äî %(message)s")

# Telegram Application
application = Application.builder().token(TELEGRAM_TOKEN).build()


@app.route("/")
def index():
    return "OK", 200


@app.route("/webhook", methods=["POST"])
def webhook():
    update = Update.de_json(request.get_json(force=True), application.bot)
    application.create_task(application.process_update(update))
    return "ok"


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        user_message = update.message.text
        logging.info("–ü–û–õ–£–ß–ï–ù–û: %s", user_message)

        headers = {
            "Authorization": f"Bearer {OPENROUTER_KEY}",
            "Content-Type": "application/json",
        }

        data = {
            "model": "openai/gpt-3.5-turbo",
            "messages": [{"role": "user", "content": user_message}],
        }

        response = requests.post("https://openrouter.ai/api/v1/chat/completions", headers=headers, json=data)
        response.raise_for_status()
        answer = response.json()["choices"][0]["message"]["content"]
        await update.message.reply_text(answer + "\n\n–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º?üòâ")

    except Exception as e:
        logging.error("GPT –û–®–ò–ë–ö–ê:\n%s", e)
        await update.message.reply_text("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ üò¢")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    pass  # –ë–µ–∑ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è ‚Äî —Å—Ä–∞–∑—É –≤ —Ä–∞–±–æ—Ç—É


# –•–µ–Ω–¥–ª–µ—Ä—ã
application.add_handler(CommandHandler("start", start))
application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))


# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook
def setup_webhook():
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/setWebhook"
    response = requests.post(url, data={"url": f"{WEBHOOK_URL}/webhook"})
    if response.status_code == 200:
        logging.info("Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: %s/webhook", WEBHOOK_URL)
    else:
        logging.error("–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook: %s", response.text)


if __name__ == "__main__":
    setup_webhook()
    logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    app.run(host="0.0.0.0", port=10000)